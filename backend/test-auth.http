# ExamSync Authentication Testing
# Use this file with VS Code REST Client extension or similar tools

@baseUrl = http://localhost:5000

### 1. Health Check
GET {{baseUrl}}/health

### 2. Register New User
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "email": "newuser@example.com",
  "password": "password123",
  "firstName": "New",
  "lastName": "User",
  "role": "student"
}

### 3. Login with Student Credentials
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "student@exam.com",
  "password": "demo123"
}

### 4. Login with Admin Credentials
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "admin@exam.com",
  "password": "demo123"
}

### 5. Login with Lecturer Credentials
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "lecturer@exam.com",
  "password": "demo123"
}

### 6. Access Protected Profile Route
GET {{baseUrl}}/api/profile
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### 7. Access Admin Route (Admin only)
GET {{baseUrl}}/api/admin/stats
Authorization: Bearer YOUR_ADMIN_JWT_TOKEN_HERE

### 8. Test Unauthenticated Access
GET {{baseUrl}}/api/profile

### 9. Test Invalid Token
GET {{baseUrl}}/api/profile
Authorization: Bearer invalid-token

### 10. Get All Exams (Public)
GET {{baseUrl}}/api/exams

### 11. Create Exam (Lecturer/Admin only)
POST {{baseUrl}}/api/exams
Authorization: Bearer YOUR_ADMIN_JWT_TOKEN_HERE
Content-Type: application/json

{
  "courseCode": "TEST101",
  "courseName": "Test Course",
  "date": "2024-12-20",
  "time": "10:00",
  "venue": "Test Room",
  "duration": 120
}
